// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vivserver.proto

#include "vivserver.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR RunInstructionsRequest::RunInstructionsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.numinstructions_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RunInstructionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunInstructionsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunInstructionsRequestDefaultTypeInternal() {}
  union {
    RunInstructionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunInstructionsRequestDefaultTypeInternal _RunInstructionsRequest_default_instance_;
PROTOBUF_CONSTEXPR RunInstructionsReply_Instruction::RunInstructionsReply_Instruction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.instruction_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.opcode_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RunInstructionsReply_InstructionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunInstructionsReply_InstructionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunInstructionsReply_InstructionDefaultTypeInternal() {}
  union {
    RunInstructionsReply_Instruction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunInstructionsReply_InstructionDefaultTypeInternal _RunInstructionsReply_Instruction_default_instance_;
PROTOBUF_CONSTEXPR RunInstructionsReply::RunInstructionsReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.instructions_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RunInstructionsReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RunInstructionsReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RunInstructionsReplyDefaultTypeInternal() {}
  union {
    RunInstructionsReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RunInstructionsReplyDefaultTypeInternal _RunInstructionsReply_default_instance_;
static ::_pb::Metadata file_level_metadata_vivserver_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_vivserver_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_vivserver_2eproto = nullptr;

const uint32_t TableStruct_vivserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RunInstructionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::RunInstructionsRequest, _impl_.numinstructions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RunInstructionsReply_Instruction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::RunInstructionsReply_Instruction, _impl_.instruction_),
  PROTOBUF_FIELD_OFFSET(::RunInstructionsReply_Instruction, _impl_.opcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RunInstructionsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::RunInstructionsReply, _impl_.instructions_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::RunInstructionsRequest)},
  { 7, -1, -1, sizeof(::RunInstructionsReply_Instruction)},
  { 15, -1, -1, sizeof(::RunInstructionsReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_RunInstructionsRequest_default_instance_._instance,
  &::_RunInstructionsReply_Instruction_default_instance_._instance,
  &::_RunInstructionsReply_default_instance_._instance,
};

const char descriptor_table_protodef_vivserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017vivserver.proto\"1\n\026RunInstructionsRequ"
  "est\022\027\n\017numInstructions\030\001 \001(\005\"\203\001\n\024RunInst"
  "ructionsReply\0227\n\014instructions\030\001 \003(\0132!.Ru"
  "nInstructionsReply.Instruction\0322\n\013Instru"
  "ction\022\023\n\013instruction\030\001 \001(\014\022\016\n\006opCode\030\002 \001"
  "(\0142R\n\010Emulator\022F\n\022RunNumInstructions\022\027.R"
  "unInstructionsRequest\032\025.RunInstructionsR"
  "eply\"\000b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_vivserver_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_vivserver_2eproto = {
    false, false, 294, descriptor_table_protodef_vivserver_2eproto,
    "vivserver.proto",
    &descriptor_table_vivserver_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_vivserver_2eproto::offsets,
    file_level_metadata_vivserver_2eproto, file_level_enum_descriptors_vivserver_2eproto,
    file_level_service_descriptors_vivserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_vivserver_2eproto_getter() {
  return &descriptor_table_vivserver_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_vivserver_2eproto(&descriptor_table_vivserver_2eproto);

// ===================================================================

class RunInstructionsRequest::_Internal {
 public:
};

RunInstructionsRequest::RunInstructionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:RunInstructionsRequest)
}
RunInstructionsRequest::RunInstructionsRequest(const RunInstructionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RunInstructionsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.numinstructions_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.numinstructions_ = from._impl_.numinstructions_;
  // @@protoc_insertion_point(copy_constructor:RunInstructionsRequest)
}

inline void RunInstructionsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.numinstructions_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RunInstructionsRequest::~RunInstructionsRequest() {
  // @@protoc_insertion_point(destructor:RunInstructionsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RunInstructionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RunInstructionsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RunInstructionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RunInstructionsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.numinstructions_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RunInstructionsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 numInstructions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.numinstructions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RunInstructionsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RunInstructionsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 numInstructions = 1;
  if (this->_internal_numinstructions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_numinstructions(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RunInstructionsRequest)
  return target;
}

size_t RunInstructionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RunInstructionsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 numInstructions = 1;
  if (this->_internal_numinstructions() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_numinstructions());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RunInstructionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RunInstructionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RunInstructionsRequest::GetClassData() const { return &_class_data_; }


void RunInstructionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RunInstructionsRequest*>(&to_msg);
  auto& from = static_cast<const RunInstructionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RunInstructionsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_numinstructions() != 0) {
    _this->_internal_set_numinstructions(from._internal_numinstructions());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RunInstructionsRequest::CopyFrom(const RunInstructionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RunInstructionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunInstructionsRequest::IsInitialized() const {
  return true;
}

void RunInstructionsRequest::InternalSwap(RunInstructionsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.numinstructions_, other->_impl_.numinstructions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RunInstructionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vivserver_2eproto_getter, &descriptor_table_vivserver_2eproto_once,
      file_level_metadata_vivserver_2eproto[0]);
}

// ===================================================================

class RunInstructionsReply_Instruction::_Internal {
 public:
};

RunInstructionsReply_Instruction::RunInstructionsReply_Instruction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:RunInstructionsReply.Instruction)
}
RunInstructionsReply_Instruction::RunInstructionsReply_Instruction(const RunInstructionsReply_Instruction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RunInstructionsReply_Instruction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.instruction_){}
    , decltype(_impl_.opcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.instruction_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instruction_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_instruction().empty()) {
    _this->_impl_.instruction_.Set(from._internal_instruction(), 
      _this->GetArenaForAllocation());
  }
  _impl_.opcode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.opcode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_opcode().empty()) {
    _this->_impl_.opcode_.Set(from._internal_opcode(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:RunInstructionsReply.Instruction)
}

inline void RunInstructionsReply_Instruction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.instruction_){}
    , decltype(_impl_.opcode_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.instruction_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instruction_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.opcode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.opcode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RunInstructionsReply_Instruction::~RunInstructionsReply_Instruction() {
  // @@protoc_insertion_point(destructor:RunInstructionsReply.Instruction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RunInstructionsReply_Instruction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.instruction_.Destroy();
  _impl_.opcode_.Destroy();
}

void RunInstructionsReply_Instruction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RunInstructionsReply_Instruction::Clear() {
// @@protoc_insertion_point(message_clear_start:RunInstructionsReply.Instruction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instruction_.ClearToEmpty();
  _impl_.opcode_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RunInstructionsReply_Instruction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes instruction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_instruction();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes opCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_opcode();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RunInstructionsReply_Instruction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RunInstructionsReply.Instruction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes instruction = 1;
  if (!this->_internal_instruction().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_instruction(), target);
  }

  // bytes opCode = 2;
  if (!this->_internal_opcode().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_opcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RunInstructionsReply.Instruction)
  return target;
}

size_t RunInstructionsReply_Instruction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RunInstructionsReply.Instruction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes instruction = 1;
  if (!this->_internal_instruction().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_instruction());
  }

  // bytes opCode = 2;
  if (!this->_internal_opcode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_opcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RunInstructionsReply_Instruction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RunInstructionsReply_Instruction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RunInstructionsReply_Instruction::GetClassData() const { return &_class_data_; }


void RunInstructionsReply_Instruction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RunInstructionsReply_Instruction*>(&to_msg);
  auto& from = static_cast<const RunInstructionsReply_Instruction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RunInstructionsReply.Instruction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_instruction().empty()) {
    _this->_internal_set_instruction(from._internal_instruction());
  }
  if (!from._internal_opcode().empty()) {
    _this->_internal_set_opcode(from._internal_opcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RunInstructionsReply_Instruction::CopyFrom(const RunInstructionsReply_Instruction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RunInstructionsReply.Instruction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunInstructionsReply_Instruction::IsInitialized() const {
  return true;
}

void RunInstructionsReply_Instruction::InternalSwap(RunInstructionsReply_Instruction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.instruction_, lhs_arena,
      &other->_impl_.instruction_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.opcode_, lhs_arena,
      &other->_impl_.opcode_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RunInstructionsReply_Instruction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vivserver_2eproto_getter, &descriptor_table_vivserver_2eproto_once,
      file_level_metadata_vivserver_2eproto[1]);
}

// ===================================================================

class RunInstructionsReply::_Internal {
 public:
};

RunInstructionsReply::RunInstructionsReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:RunInstructionsReply)
}
RunInstructionsReply::RunInstructionsReply(const RunInstructionsReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RunInstructionsReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.instructions_){from._impl_.instructions_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RunInstructionsReply)
}

inline void RunInstructionsReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.instructions_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RunInstructionsReply::~RunInstructionsReply() {
  // @@protoc_insertion_point(destructor:RunInstructionsReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RunInstructionsReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.instructions_.~RepeatedPtrField();
}

void RunInstructionsReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RunInstructionsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:RunInstructionsReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instructions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RunInstructionsReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .RunInstructionsReply.Instruction instructions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_instructions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RunInstructionsReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RunInstructionsReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .RunInstructionsReply.Instruction instructions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_instructions_size()); i < n; i++) {
    const auto& repfield = this->_internal_instructions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RunInstructionsReply)
  return target;
}

size_t RunInstructionsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RunInstructionsReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .RunInstructionsReply.Instruction instructions = 1;
  total_size += 1UL * this->_internal_instructions_size();
  for (const auto& msg : this->_impl_.instructions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RunInstructionsReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RunInstructionsReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RunInstructionsReply::GetClassData() const { return &_class_data_; }


void RunInstructionsReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RunInstructionsReply*>(&to_msg);
  auto& from = static_cast<const RunInstructionsReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RunInstructionsReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.instructions_.MergeFrom(from._impl_.instructions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RunInstructionsReply::CopyFrom(const RunInstructionsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RunInstructionsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunInstructionsReply::IsInitialized() const {
  return true;
}

void RunInstructionsReply::InternalSwap(RunInstructionsReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.instructions_.InternalSwap(&other->_impl_.instructions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RunInstructionsReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_vivserver_2eproto_getter, &descriptor_table_vivserver_2eproto_once,
      file_level_metadata_vivserver_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::RunInstructionsRequest*
Arena::CreateMaybeMessage< ::RunInstructionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RunInstructionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::RunInstructionsReply_Instruction*
Arena::CreateMaybeMessage< ::RunInstructionsReply_Instruction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RunInstructionsReply_Instruction >(arena);
}
template<> PROTOBUF_NOINLINE ::RunInstructionsReply*
Arena::CreateMaybeMessage< ::RunInstructionsReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RunInstructionsReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: binja.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_binja_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_binja_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_binja_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_binja_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_binja_2eproto;
class BinjaInstructions;
struct BinjaInstructionsDefaultTypeInternal;
extern BinjaInstructionsDefaultTypeInternal _BinjaInstructions_default_instance_;
class BinjaInstructions_Instruction;
struct BinjaInstructions_InstructionDefaultTypeInternal;
extern BinjaInstructions_InstructionDefaultTypeInternal _BinjaInstructions_Instruction_default_instance_;
class CycleCounts;
struct CycleCountsDefaultTypeInternal;
extern CycleCountsDefaultTypeInternal _CycleCounts_default_instance_;
class CycleCounts_CycleCount;
struct CycleCounts_CycleCountDefaultTypeInternal;
extern CycleCounts_CycleCountDefaultTypeInternal _CycleCounts_CycleCount_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class CycleCounts_CycleCount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CycleCounts.CycleCount) */ {
 public:
  inline CycleCounts_CycleCount() : CycleCounts_CycleCount(nullptr) {}
  ~CycleCounts_CycleCount() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CycleCounts_CycleCount(::google::protobuf::internal::ConstantInitialized);

  inline CycleCounts_CycleCount(const CycleCounts_CycleCount& from)
      : CycleCounts_CycleCount(nullptr, from) {}
  CycleCounts_CycleCount(CycleCounts_CycleCount&& from) noexcept
    : CycleCounts_CycleCount() {
    *this = ::std::move(from);
  }

  inline CycleCounts_CycleCount& operator=(const CycleCounts_CycleCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline CycleCounts_CycleCount& operator=(CycleCounts_CycleCount&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CycleCounts_CycleCount& default_instance() {
    return *internal_default_instance();
  }
  static inline const CycleCounts_CycleCount* internal_default_instance() {
    return reinterpret_cast<const CycleCounts_CycleCount*>(
               &_CycleCounts_CycleCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CycleCounts_CycleCount& a, CycleCounts_CycleCount& b) {
    a.Swap(&b);
  }
  inline void Swap(CycleCounts_CycleCount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CycleCounts_CycleCount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CycleCounts_CycleCount* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CycleCounts_CycleCount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CycleCounts_CycleCount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CycleCounts_CycleCount& from) {
    CycleCounts_CycleCount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CycleCounts_CycleCount* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CycleCounts.CycleCount";
  }
  protected:
  explicit CycleCounts_CycleCount(::google::protobuf::Arena* arena);
  CycleCounts_CycleCount(::google::protobuf::Arena* arena, const CycleCounts_CycleCount& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReadyFieldNumber = 1,
    kExecutedFieldNumber = 2,
    kIsUnderPressureFieldNumber = 3,
  };
  // uint64 ready = 1;
  void clear_ready() ;
  ::uint64_t ready() const;
  void set_ready(::uint64_t value);

  private:
  ::uint64_t _internal_ready() const;
  void _internal_set_ready(::uint64_t value);

  public:
  // uint64 executed = 2;
  void clear_executed() ;
  ::uint64_t executed() const;
  void set_executed(::uint64_t value);

  private:
  ::uint64_t _internal_executed() const;
  void _internal_set_executed(::uint64_t value);

  public:
  // bool is_under_pressure = 3;
  void clear_is_under_pressure() ;
  bool is_under_pressure() const;
  void set_is_under_pressure(bool value);

  private:
  bool _internal_is_under_pressure() const;
  void _internal_set_is_under_pressure(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CycleCounts.CycleCount)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t ready_;
    ::uint64_t executed_;
    bool is_under_pressure_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binja_2eproto;
};// -------------------------------------------------------------------

class BinjaInstructions_Instruction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BinjaInstructions.Instruction) */ {
 public:
  inline BinjaInstructions_Instruction() : BinjaInstructions_Instruction(nullptr) {}
  ~BinjaInstructions_Instruction() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BinjaInstructions_Instruction(::google::protobuf::internal::ConstantInitialized);

  inline BinjaInstructions_Instruction(const BinjaInstructions_Instruction& from)
      : BinjaInstructions_Instruction(nullptr, from) {}
  BinjaInstructions_Instruction(BinjaInstructions_Instruction&& from) noexcept
    : BinjaInstructions_Instruction() {
    *this = ::std::move(from);
  }

  inline BinjaInstructions_Instruction& operator=(const BinjaInstructions_Instruction& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinjaInstructions_Instruction& operator=(BinjaInstructions_Instruction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinjaInstructions_Instruction& default_instance() {
    return *internal_default_instance();
  }
  static inline const BinjaInstructions_Instruction* internal_default_instance() {
    return reinterpret_cast<const BinjaInstructions_Instruction*>(
               &_BinjaInstructions_Instruction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BinjaInstructions_Instruction& a, BinjaInstructions_Instruction& b) {
    a.Swap(&b);
  }
  inline void Swap(BinjaInstructions_Instruction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinjaInstructions_Instruction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinjaInstructions_Instruction* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BinjaInstructions_Instruction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinjaInstructions_Instruction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BinjaInstructions_Instruction& from) {
    BinjaInstructions_Instruction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BinjaInstructions_Instruction* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "BinjaInstructions.Instruction";
  }
  protected:
  explicit BinjaInstructions_Instruction(::google::protobuf::Arena* arena);
  BinjaInstructions_Instruction(::google::protobuf::Arena* arena, const BinjaInstructions_Instruction& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpcodeFieldNumber = 1,
  };
  // bytes opcode = 1;
  void clear_opcode() ;
  const std::string& opcode() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_opcode(Arg_&& arg, Args_... args);
  std::string* mutable_opcode();
  PROTOBUF_NODISCARD std::string* release_opcode();
  void set_allocated_opcode(std::string* value);

  private:
  const std::string& _internal_opcode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_opcode(
      const std::string& value);
  std::string* _internal_mutable_opcode();

  public:
  // @@protoc_insertion_point(class_scope:BinjaInstructions.Instruction)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr opcode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binja_2eproto;
};// -------------------------------------------------------------------

class CycleCounts final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CycleCounts) */ {
 public:
  inline CycleCounts() : CycleCounts(nullptr) {}
  ~CycleCounts() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CycleCounts(::google::protobuf::internal::ConstantInitialized);

  inline CycleCounts(const CycleCounts& from)
      : CycleCounts(nullptr, from) {}
  CycleCounts(CycleCounts&& from) noexcept
    : CycleCounts() {
    *this = ::std::move(from);
  }

  inline CycleCounts& operator=(const CycleCounts& from) {
    CopyFrom(from);
    return *this;
  }
  inline CycleCounts& operator=(CycleCounts&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CycleCounts& default_instance() {
    return *internal_default_instance();
  }
  static inline const CycleCounts* internal_default_instance() {
    return reinterpret_cast<const CycleCounts*>(
               &_CycleCounts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CycleCounts& a, CycleCounts& b) {
    a.Swap(&b);
  }
  inline void Swap(CycleCounts* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CycleCounts* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CycleCounts* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CycleCounts>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CycleCounts& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CycleCounts& from) {
    CycleCounts::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CycleCounts* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CycleCounts";
  }
  protected:
  explicit CycleCounts(::google::protobuf::Arena* arena);
  CycleCounts(::google::protobuf::Arena* arena, const CycleCounts& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using CycleCount = CycleCounts_CycleCount;

  // accessors -------------------------------------------------------

  enum : int {
    kCycleCountFieldNumber = 1,
  };
  // repeated .CycleCounts.CycleCount cycle_count = 1;
  int cycle_count_size() const;
  private:
  int _internal_cycle_count_size() const;

  public:
  void clear_cycle_count() ;
  ::CycleCounts_CycleCount* mutable_cycle_count(int index);
  ::google::protobuf::RepeatedPtrField< ::CycleCounts_CycleCount >*
      mutable_cycle_count();
  private:
  const ::google::protobuf::RepeatedPtrField<::CycleCounts_CycleCount>& _internal_cycle_count() const;
  ::google::protobuf::RepeatedPtrField<::CycleCounts_CycleCount>* _internal_mutable_cycle_count();
  public:
  const ::CycleCounts_CycleCount& cycle_count(int index) const;
  ::CycleCounts_CycleCount* add_cycle_count();
  const ::google::protobuf::RepeatedPtrField< ::CycleCounts_CycleCount >&
      cycle_count() const;
  // @@protoc_insertion_point(class_scope:CycleCounts)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::CycleCounts_CycleCount > cycle_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binja_2eproto;
};// -------------------------------------------------------------------

class BinjaInstructions final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BinjaInstructions) */ {
 public:
  inline BinjaInstructions() : BinjaInstructions(nullptr) {}
  ~BinjaInstructions() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BinjaInstructions(::google::protobuf::internal::ConstantInitialized);

  inline BinjaInstructions(const BinjaInstructions& from)
      : BinjaInstructions(nullptr, from) {}
  BinjaInstructions(BinjaInstructions&& from) noexcept
    : BinjaInstructions() {
    *this = ::std::move(from);
  }

  inline BinjaInstructions& operator=(const BinjaInstructions& from) {
    CopyFrom(from);
    return *this;
  }
  inline BinjaInstructions& operator=(BinjaInstructions&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BinjaInstructions& default_instance() {
    return *internal_default_instance();
  }
  static inline const BinjaInstructions* internal_default_instance() {
    return reinterpret_cast<const BinjaInstructions*>(
               &_BinjaInstructions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BinjaInstructions& a, BinjaInstructions& b) {
    a.Swap(&b);
  }
  inline void Swap(BinjaInstructions* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BinjaInstructions* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BinjaInstructions* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BinjaInstructions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BinjaInstructions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BinjaInstructions& from) {
    BinjaInstructions::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BinjaInstructions* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "BinjaInstructions";
  }
  protected:
  explicit BinjaInstructions(::google::protobuf::Arena* arena);
  BinjaInstructions(::google::protobuf::Arena* arena, const BinjaInstructions& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Instruction = BinjaInstructions_Instruction;

  // accessors -------------------------------------------------------

  enum : int {
    kInstructionFieldNumber = 1,
  };
  // repeated .BinjaInstructions.Instruction instruction = 1;
  int instruction_size() const;
  private:
  int _internal_instruction_size() const;

  public:
  void clear_instruction() ;
  ::BinjaInstructions_Instruction* mutable_instruction(int index);
  ::google::protobuf::RepeatedPtrField< ::BinjaInstructions_Instruction >*
      mutable_instruction();
  private:
  const ::google::protobuf::RepeatedPtrField<::BinjaInstructions_Instruction>& _internal_instruction() const;
  ::google::protobuf::RepeatedPtrField<::BinjaInstructions_Instruction>* _internal_mutable_instruction();
  public:
  const ::BinjaInstructions_Instruction& instruction(int index) const;
  ::BinjaInstructions_Instruction* add_instruction();
  const ::google::protobuf::RepeatedPtrField< ::BinjaInstructions_Instruction >&
      instruction() const;
  // @@protoc_insertion_point(class_scope:BinjaInstructions)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::BinjaInstructions_Instruction > instruction_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_binja_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BinjaInstructions_Instruction

// bytes opcode = 1;
inline void BinjaInstructions_Instruction::clear_opcode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.opcode_.ClearToEmpty();
}
inline const std::string& BinjaInstructions_Instruction::opcode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinjaInstructions.Instruction.opcode)
  return _internal_opcode();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BinjaInstructions_Instruction::set_opcode(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.opcode_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:BinjaInstructions.Instruction.opcode)
}
inline std::string* BinjaInstructions_Instruction::mutable_opcode() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_opcode();
  // @@protoc_insertion_point(field_mutable:BinjaInstructions.Instruction.opcode)
  return _s;
}
inline const std::string& BinjaInstructions_Instruction::_internal_opcode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.opcode_.Get();
}
inline void BinjaInstructions_Instruction::_internal_set_opcode(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.opcode_.Set(value, GetArena());
}
inline std::string* BinjaInstructions_Instruction::_internal_mutable_opcode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.opcode_.Mutable( GetArena());
}
inline std::string* BinjaInstructions_Instruction::release_opcode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:BinjaInstructions.Instruction.opcode)
  return _impl_.opcode_.Release();
}
inline void BinjaInstructions_Instruction::set_allocated_opcode(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.opcode_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.opcode_.IsDefault()) {
          _impl_.opcode_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:BinjaInstructions.Instruction.opcode)
}

// -------------------------------------------------------------------

// BinjaInstructions

// repeated .BinjaInstructions.Instruction instruction = 1;
inline int BinjaInstructions::_internal_instruction_size() const {
  return _internal_instruction().size();
}
inline int BinjaInstructions::instruction_size() const {
  return _internal_instruction_size();
}
inline void BinjaInstructions::clear_instruction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.instruction_.Clear();
}
inline ::BinjaInstructions_Instruction* BinjaInstructions::mutable_instruction(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:BinjaInstructions.instruction)
  return _internal_mutable_instruction()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::BinjaInstructions_Instruction>* BinjaInstructions::mutable_instruction()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:BinjaInstructions.instruction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_instruction();
}
inline const ::BinjaInstructions_Instruction& BinjaInstructions::instruction(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:BinjaInstructions.instruction)
  return _internal_instruction().Get(index);
}
inline ::BinjaInstructions_Instruction* BinjaInstructions::add_instruction() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::BinjaInstructions_Instruction* _add = _internal_mutable_instruction()->Add();
  // @@protoc_insertion_point(field_add:BinjaInstructions.instruction)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::BinjaInstructions_Instruction>& BinjaInstructions::instruction() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:BinjaInstructions.instruction)
  return _internal_instruction();
}
inline const ::google::protobuf::RepeatedPtrField<::BinjaInstructions_Instruction>&
BinjaInstructions::_internal_instruction() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instruction_;
}
inline ::google::protobuf::RepeatedPtrField<::BinjaInstructions_Instruction>*
BinjaInstructions::_internal_mutable_instruction() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.instruction_;
}

// -------------------------------------------------------------------

// CycleCounts_CycleCount

// uint64 ready = 1;
inline void CycleCounts_CycleCount::clear_ready() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ready_ = ::uint64_t{0u};
}
inline ::uint64_t CycleCounts_CycleCount::ready() const {
  // @@protoc_insertion_point(field_get:CycleCounts.CycleCount.ready)
  return _internal_ready();
}
inline void CycleCounts_CycleCount::set_ready(::uint64_t value) {
  _internal_set_ready(value);
  // @@protoc_insertion_point(field_set:CycleCounts.CycleCount.ready)
}
inline ::uint64_t CycleCounts_CycleCount::_internal_ready() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ready_;
}
inline void CycleCounts_CycleCount::_internal_set_ready(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ready_ = value;
}

// uint64 executed = 2;
inline void CycleCounts_CycleCount::clear_executed() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.executed_ = ::uint64_t{0u};
}
inline ::uint64_t CycleCounts_CycleCount::executed() const {
  // @@protoc_insertion_point(field_get:CycleCounts.CycleCount.executed)
  return _internal_executed();
}
inline void CycleCounts_CycleCount::set_executed(::uint64_t value) {
  _internal_set_executed(value);
  // @@protoc_insertion_point(field_set:CycleCounts.CycleCount.executed)
}
inline ::uint64_t CycleCounts_CycleCount::_internal_executed() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.executed_;
}
inline void CycleCounts_CycleCount::_internal_set_executed(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.executed_ = value;
}

// bool is_under_pressure = 3;
inline void CycleCounts_CycleCount::clear_is_under_pressure() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_under_pressure_ = false;
}
inline bool CycleCounts_CycleCount::is_under_pressure() const {
  // @@protoc_insertion_point(field_get:CycleCounts.CycleCount.is_under_pressure)
  return _internal_is_under_pressure();
}
inline void CycleCounts_CycleCount::set_is_under_pressure(bool value) {
  _internal_set_is_under_pressure(value);
  // @@protoc_insertion_point(field_set:CycleCounts.CycleCount.is_under_pressure)
}
inline bool CycleCounts_CycleCount::_internal_is_under_pressure() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_under_pressure_;
}
inline void CycleCounts_CycleCount::_internal_set_is_under_pressure(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_under_pressure_ = value;
}

// -------------------------------------------------------------------

// CycleCounts

// repeated .CycleCounts.CycleCount cycle_count = 1;
inline int CycleCounts::_internal_cycle_count_size() const {
  return _internal_cycle_count().size();
}
inline int CycleCounts::cycle_count_size() const {
  return _internal_cycle_count_size();
}
inline void CycleCounts::clear_cycle_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cycle_count_.Clear();
}
inline ::CycleCounts_CycleCount* CycleCounts::mutable_cycle_count(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CycleCounts.cycle_count)
  return _internal_mutable_cycle_count()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CycleCounts_CycleCount>* CycleCounts::mutable_cycle_count()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CycleCounts.cycle_count)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cycle_count();
}
inline const ::CycleCounts_CycleCount& CycleCounts::cycle_count(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CycleCounts.cycle_count)
  return _internal_cycle_count().Get(index);
}
inline ::CycleCounts_CycleCount* CycleCounts::add_cycle_count() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::CycleCounts_CycleCount* _add = _internal_mutable_cycle_count()->Add();
  // @@protoc_insertion_point(field_add:CycleCounts.cycle_count)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CycleCounts_CycleCount>& CycleCounts::cycle_count() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CycleCounts.cycle_count)
  return _internal_cycle_count();
}
inline const ::google::protobuf::RepeatedPtrField<::CycleCounts_CycleCount>&
CycleCounts::_internal_cycle_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cycle_count_;
}
inline ::google::protobuf::RepeatedPtrField<::CycleCounts_CycleCount>*
CycleCounts::_internal_mutable_cycle_count() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cycle_count_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_binja_2eproto_2epb_2eh
